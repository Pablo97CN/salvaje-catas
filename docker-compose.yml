services:
  db:
    image: postgres:15
    container_name: salvaje-catas-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: salvajecatas
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d salvajecatas"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
   
    container_name: salvaje-catas-backend
    restart: unless-stopped
    working_dir: /var/www
    environment:
      - APP_UID=${UID:-1000}
      - APP_GID=${GID:-1000}
    volumes:
      - ./backend:/var/www
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "9000"
    networks:
      - app-network
    user: "www-data"
    
  frontend:
    build:
      context: ./frontend
    container_name: salvaje-catas-frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    expose:
      - "5173"
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: salvaje-catas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/var/www:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres-data:
    name: salvaje-catas-postgres-data
    external: true
  node_modules:
    name: salvaje-catas-node_modules
    external: true

networks:
  app-network:
    driver: bridge
